<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="4" registryId="b4331f32-bd53-4725-b41e-d3c6816f6afe" visibility="Internal">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexConnect" name="ApexConnect" testItemId="1" title="Salesforce Connect: SalesforceOrg (Test)">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">SalesforceOrg</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">SalesforceOrg</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="uiApplicationName"/>
        <argument id="quickUiLogin">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="closeAllPrimaryTabs">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument argId="924f9a90-d7f5-462f-b247-2a022618f02e" id="reuseConnectionName">
          <value class="variable">
            <path element="reuseConnectionName"/>
          </value>
        </argument>
        <argument id="alreadyOpenBehaviour">
          <value class="value" valueClass="string">Fail</value>
        </argument>
        <argument id="privateBrowsingMode"/>
        <argument id="enableObjectIdLogging">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="autoCleanup"/>
        <argument id="cleanupConnectionName"/>
        <argument id="logFileLocation"/>
        <argument id="username"/>
        <argument id="password"/>
        <argument id="securityToken"/>
        <argument id="environment"/>
        <argument id="lightningMode">
          <value class="value" valueClass="string">default</value>
        </argument>
        <argument id="webBrowser"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.ui.UiWithScreen" name="UiWithScreen" testItemId="1027" title="On SF Account page with pageobject Account">
      <arguments>
        <argument id="uiConnectionName">
          <value class="value" valueClass="string">SalesforceOrg</value>
        </argument>
        <argument id="target">
          <value class="uiTarget" uri="sf:ui:target?page=Account&amp;pageObject=pageobjects.Account"/>
        </argument>
        <argument id="navigate">
          <value class="value" valueClass="string">Dont</value>
        </argument>
        <argument id="targetDescription">
          <value class="value" valueClass="string">On SF Account page with pageobject Account</value>
        </argument>
        <argument id="windowSelection">
          <value class="value" valueClass="string">Default</value>
        </argument>
        <argument id="windowSize">
          <value class="value" valueClass="string">Default</value>
        </argument>
        <argument id="closeWindow"/>
        <argument id="captureBefore">
          <value class="value" valueClass="string">false</value>
        </argument>
        <argument id="captureAfter">
          <value class="value" valueClass="string">false</value>
        </argument>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="818">
          <steps>
            <apiCall apiId="com.provar.plugins.forcedotcom.core.ui.UiWithScreen" name="UiWithScreen" testItemId="819" title="On SF Account (Person Account) View screen">
              <arguments>
                <argument id="uiConnectionName">
                  <value class="value" valueClass="string">SalesforceOrg</value>
                </argument>
                <argument id="target">
                  <value class="uiTarget" uri="sf:ui:target?object=Account&amp;action=View&amp;recordType=Person+Account&amp;noOverride=true"/>
                </argument>
                <argument id="navigate">
                  <value class="value" valueClass="string">Dont</value>
                </argument>
                <argument id="targetDescription">
                  <value class="value" valueClass="string">On SF Account (Person Account) View screen</value>
                </argument>
                <argument id="windowSelection">
                  <value class="value" valueClass="string">Default</value>
                </argument>
                <argument id="windowSize">
                  <value class="value" valueClass="string">Default</value>
                </argument>
                <argument id="closeWindow"/>
                <argument id="captureBefore">
                  <value class="value" valueClass="string">false</value>
                </argument>
                <argument id="captureAfter">
                  <value class="value" valueClass="string">false</value>
                </argument>
                <argument id="sfUiTargetObjectId"/>
              </arguments>
              <clauses>
                <clause name="substeps" testItemId="820">
                  <steps>
                    <apiCall apiId="com.provar.plugins.forcedotcom.core.ui.UiAssert" name="UiAssert" testItemId="919" title="UI Assert">
                      <arguments>
                        <argument id="resultName">
                          <value class="value" valueClass="string">Values</value>
                        </argument>
                        <argument id="resultScope">
                          <value class="value" valueClass="string">Test</value>
                        </argument>
                        <argument id="fieldAssertions">
                          <value class="valueList" mutable="Mutable">
                            <uiFieldAssertion resultName="Account_Status__c">
                              <fieldLocator uri="ui:locator?name=Account_Status__c&amp;binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DAccount_Status__c"/>
                              <attributeAssertions>
                                <uiAttributeAssertion attributeName="value" comparisonType="None"/>
                              </attributeAssertions>
                            </uiFieldAssertion>
                            <uiFieldAssertion resultName="Account_Status__c">
                              <fieldLocator uri="ui:locator?name=Account_Status__c&amp;binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DAccount_Status__c"/>
                              <attributeAssertions>
                                <uiAttributeAssertion attributeName="value" comparisonType="None"/>
                              </attributeAssertions>
                            </uiFieldAssertion>
                          </value>
                        </argument>
                        <argument id="captureAfter">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="columnAssertions">
                          <value class="valueList" mutable="Mutable"/>
                        </argument>
                        <argument id="pageAssertions">
                          <value class="valueList" mutable="Mutable"/>
                        </argument>
                        <argument id="beforeWait"/>
                        <argument id="autoRetry"/>
                      </arguments>
                    </apiCall>
                    <apiCall apiId="com.provar.plugins.bundled.apis.control.WaitFor" name="WaitFor" testItemId="1079" title="Wait For: {Values.fields.Account_Status__c.value = &quot;Free Trial&quot;}=&gt;{10}">
                      <tags/>
                      <arguments>
                        <argument id="condition">
                          <value class="eq">
                            <lhs class="variable">
                              <path element="Values"/>
                              <path element="fields"/>
                              <path element="Account_Status__c"/>
                              <path element="value"/>
                            </lhs>
                            <rhs class="value" valueClass="string">Free Trial</rhs>
                          </value>
                        </argument>
                        <argument id="testAtStart">
                          <value class="value" valueClass="boolean">true</value>
                        </argument>
                        <argument id="maxIterations">
                          <value class="value" valueClass="decimal">10</value>
                        </argument>
                        <argument id="sleepSecs">
                          <value class="value" valueClass="decimal">10</value>
                        </argument>
                        <argument id="continueOnFailure">
                          <value class="value" valueClass="boolean">true</value>
                        </argument>
                      </arguments>
                      <clauses>
                        <clause name="substeps" testItemId="1080">
                          <steps>
                            <apiCall apiId="com.provar.plugins.forcedotcom.core.ui.UiNavigate" name="UiNavigate" testItemId="1082" title="Navigate: Refresh">
                              <arguments>
                                <argument id="navigate">
                                  <value class="value" valueClass="string">Refresh</value>
                                </argument>
                                <argument id="captureBefore">
                                  <value class="value" valueClass="string">false</value>
                                </argument>
                                <argument id="captureAfter">
                                  <value class="value" valueClass="string">false</value>
                                </argument>
                              </arguments>
                            </apiCall>
                          </steps>
                        </clause>
                      </clauses>
                    </apiCall>
                    <apiCall apiId="com.provar.plugins.forcedotcom.core.ui.UiAssert" isTitleUpdated="true" name="UiAssert" testItemId="1076" title="UI Assert : Account Name">
                      <tags/>
                      <arguments>
                        <argument argId="f5a72c0d-3900-45fa-b55f-26254b8a0267" id="resultName">
                          <value class="value" valueClass="string">Values</value>
                        </argument>
                        <argument id="resultScope">
                          <value class="value" valueClass="string">Test</value>
                        </argument>
                        <argument id="fieldAssertions">
                          <value class="valueList" mutable="Mutable">
                            <uiFieldAssertion resultName="Name">
                              <fieldLocator uri="ui:locator?name=Name&amp;binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DName"/>
                              <attributeAssertions>
                                <uiAttributeAssertion attributeName="value" comparisonType="EqualTo" normalize="true">
                                  <value class="variable">
                                    <path element="AccountName"/>
                                  </value>
                                </uiAttributeAssertion>
                              </attributeAssertions>
                            </uiFieldAssertion>
                          </value>
                        </argument>
                        <argument id="captureAfter">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="columnAssertions">
                          <value class="valueList" mutable="Mutable"/>
                        </argument>
                        <argument id="pageAssertions">
                          <value class="valueList" mutable="Mutable"/>
                        </argument>
                        <argument id="beforeWait"/>
                        <argument id="autoRetry"/>
                      </arguments>
                    </apiCall>
                    <apiCall apiId="com.provar.plugins.forcedotcom.core.ui.UiAssert" isTitleUpdated="true" name="UiAssert" testItemId="1077" title="UI Assert : Email">
                      <tags/>
                      <arguments>
                        <argument id="resultName">
                          <value class="value" valueClass="string">Values</value>
                        </argument>
                        <argument id="resultScope">
                          <value class="value" valueClass="string">Test</value>
                        </argument>
                        <argument id="fieldAssertions">
                          <value class="valueList" mutable="Mutable">
                            <uiFieldAssertion resultName="PersonEmail">
                              <fieldLocator uri="ui:locator?name=PersonEmail&amp;binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DPersonEmail"/>
                              <attributeAssertions>
                                <uiAttributeAssertion attributeName="value" caseInsensitive="true" comparisonType="EqualTo" normalize="true">
                                  <value class="variable">
                                    <path element="AccountEmail"/>
                                  </value>
                                </uiAttributeAssertion>
                              </attributeAssertions>
                            </uiFieldAssertion>
                          </value>
                        </argument>
                        <argument id="captureAfter">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="columnAssertions">
                          <value class="valueList" mutable="Mutable"/>
                        </argument>
                        <argument id="pageAssertions">
                          <value class="valueList" mutable="Mutable"/>
                        </argument>
                        <argument id="beforeWait"/>
                        <argument id="autoRetry"/>
                      </arguments>
                    </apiCall>
                    <apiCall apiId="com.provar.plugins.forcedotcom.core.ui.UiWithScreen" name="UiWithScreen" testItemId="1091" title="On SF Account (Person Account) View screen">
                      <arguments>
                        <argument id="uiConnectionName">
                          <value class="value" valueClass="string">SalesforceOrg</value>
                        </argument>
                        <argument id="target">
                          <value class="uiTarget" uri="sf:ui:target?object=Account&amp;action=View&amp;recordType=Person+Account&amp;noOverride=true"/>
                        </argument>
                        <argument id="navigate">
                          <value class="value" valueClass="string">Embedded</value>
                        </argument>
                        <argument id="targetDescription">
                          <value class="value" valueClass="string">On SF Account (Person Account) View screen</value>
                        </argument>
                        <argument id="windowSelection">
                          <value class="value" valueClass="string">Default</value>
                        </argument>
                        <argument id="windowSize">
                          <value class="value" valueClass="string">Default</value>
                        </argument>
                        <argument id="closeWindow"/>
                        <argument id="captureBefore">
                          <value class="value" valueClass="string">false</value>
                        </argument>
                        <argument id="captureAfter">
                          <value class="value" valueClass="string">false</value>
                        </argument>
                        <argument id="sfUiTargetObjectId"/>
                      </arguments>
                      <clauses>
                        <clause name="substeps" testItemId="1092">
                          <steps>
                            <apiCall apiId="com.provar.plugins.forcedotcom.core.ui.UiAssert" name="UiAssert" testItemId="1102" title="UI Assert">
                              <arguments>
                                <argument id="resultName">
                                  <value class="value" valueClass="string">Values</value>
                                </argument>
                                <argument id="resultScope">
                                  <value class="value" valueClass="string">Test</value>
                                </argument>
                                <argument id="fieldAssertions">
                                  <value class="valueList" mutable="Mutable">
                                    <uiFieldAssertion resultName="Account_Status__c">
                                      <fieldLocator uri="ui:locator?name=Account_Status__c&amp;binding=sf%3Aui%3Abinding%3Aobject%3Fobject%3DAccount%26field%3DAccount_Status__c"/>
                                      <attributeAssertions>
                                        <uiAttributeAssertion attributeName="value" comparisonType="None" normalize="true">
                                          <value class="value" valueClass="string">Free Trial</value>
                                        </uiAttributeAssertion>
                                      </attributeAssertions>
                                    </uiFieldAssertion>
                                  </value>
                                </argument>
                                <argument id="captureAfter">
                                  <value class="value" valueClass="boolean">false</value>
                                </argument>
                                <argument id="columnAssertions">
                                  <value class="valueList" mutable="Mutable"/>
                                </argument>
                                <argument id="pageAssertions">
                                  <value class="valueList" mutable="Mutable"/>
                                </argument>
                                <argument id="beforeWait"/>
                                <argument id="autoRetry"/>
                              </arguments>
                            </apiCall>
                            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="1103" title="Set Values: Var.AccountStatus">
                              <arguments>
                                <argument id="values">
                                  <value class="valueList" mutable="Mutable">
                                    <namedValues mutable="Mutable">
                                      <namedValue name="valuePath">
                                        <value class="value" valueClass="string">Var.AccountStatus</value>
                                      </namedValue>
                                      <namedValue name="value">
                                        <value class="variable">
                                          <path element="Values"/>
                                          <path element="fields"/>
                                          <path element="Account_Status__c"/>
                                          <path element="value"/>
                                        </value>
                                      </namedValue>
                                      <namedValue name="valueScope">
                                        <value class="value" valueClass="string">Test</value>
                                      </namedValue>
                                    </namedValues>
                                  </value>
                                </argument>
                              </arguments>
                            </apiCall>
                            <apiCall apiId="com.provar.plugins.bundled.apis.io.Write" name="Write" testItemId="1104" title="Write: {Var}=&gt;Templates/germany_testdata.xlsx">
                              <tags/>
                              <arguments>
                                <argument id="data">
                                  <value class="variable">
                                    <path element="Var"/>
                                  </value>
                                </argument>
                                <argument id="dataUrl">
                                  <value class="excelTarget" sheetWriteMode="Update">
                                    <workbookPath class="value" valueClass="string">Templates/germany_testdata.xlsx</workbookPath>
                                    <worksheetName class="variable">
                                      <path element="GlobalCountryCode"/>
                                    </worksheetName>
                                  </value>
                                </argument>
                                <argument id="targetDescription">
                                  <value class="value" valueClass="string">Templates/germany_testdata.xlsx</value>
                                </argument>
                                <argument id="updateValueRange"/>
                                <argument id="updateColumnNames">
                                  <value class="value" valueClass="string">FirstRowOfRange</value>
                                </argument>
                                <argument id="updateMatchType">
                                  <value class="value" valueClass="string">Where</value>
                                </argument>
                                <argument id="updateMatchLocator">
                                  <value class="eq">
                                    <lhs class="variable">
                                      <path element="Email"/>
                                    </lhs>
                                    <rhs class="variable" topLevel="true">
                                      <path element="AccountEmail"/>
                                    </rhs>
                                  </value>
                                </argument>
                              </arguments>
                              <generatedParameters>
                                <apiParam group="result" name="updateValueRange" title="Values Range">
                                  <summary>The range of cells that needs to updated. If nothing is specified entire sheet is targeted</summary>
                                  <type>
                                    <textType>
                                      <constraints>
                                        <valueConstraint name="disableTemplateEditor">true</valueConstraint>
                                      </constraints>
                                    </textType>
                                  </type>
                                </apiParam>
                                <apiParam group="result" name="updateColumnNames" title="Column Names">
                                  <summary>Identifies where the column names are in the spreadsheet:</summary>
                                  <defaultValue>FirstRowOfRange</defaultValue>
                                  <type>
                                    <choiceType>
                                      <constraints>
                                        <valueConstraint name="boundedValues">FirstRowOfRange:Across the first row|FirstColumnOfRange:Down the first column</valueConstraint>
                                      </constraints>
                                    </choiceType>
                                  </type>
                                </apiParam>
                                <apiParam group="result" internal="true" name="updateMatchType" title="">
                                  <summary/>
                                  <defaultValue>RowOrColNumber</defaultValue>
                                  <type>
                                    <choiceType>
                                      <constraints>
                                        <valueConstraint name="boundedValues">RowOrColNumber:Match by Position|Where:Match on Condition|MatchColumns:Match by Columns</valueConstraint>
                                      </constraints>
                                    </choiceType>
                                  </type>
                                </apiParam>
                                <apiParam group="result" manuallyResolved="true" name="updateMatchLocator" title="Match Locator">
                                  <summary>Identifies which rows in the Range will be updated. \n It can either be a row number (where the first row = 1) or a filtering condition against one or more columns (e.g. {firstName = "Joe" and surname = "Bloggs"}.</summary>
                                </apiParam>
                              </generatedParameters>
                            </apiCall>
                          </steps>
                        </clause>
                      </clauses>
                      <generatedParameters>
                        <apiParam group="target" name="sfUiTargetObjectId" title="Object Id">
                          <summary>The Id of the SF Object to be Viewed or Edited.</summary>
                          <type>
                            <textType/>
                          </type>
                        </apiParam>
                      </generatedParameters>
                    </apiCall>
                  </steps>
                </clause>
              </clauses>
              <generatedParameters>
                <apiParam group="target" name="sfUiTargetObjectId" title="Object Id">
                  <summary>The Id of the SF Object to be Viewed or Edited.</summary>
                  <type>
                    <textType/>
                  </type>
                </apiParam>
              </generatedParameters>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
  <params>
    <param linkedToUrl="provar:hasvalue:924f9a90-d7f5-462f-b247-2a022618f02e" name="reuseConnectionName" title="Override Connection">
      <summary>The name of an already opened connect to re-use.</summary>
      <type>
        <connectionType>
          <constraints>
            <valueConstraint name="variableName">true</valueConstraint>
            <valueConstraint name="requiredCapabilities">sfSoapConnect</valueConstraint>
          </constraints>
        </connectionType>
      </type>
    </param>
    <param name="AccountName" title="AccountName">
      <summary>The name under which the resulting values will be stored.</summary>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
    <param name="AccountEmail" title="AccountEmail">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
    <param name="GlobalCountryCode" title="GlobalCountryCode">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
  </params>
  <args>
    <argument id="reuseConnectionName">
      <value class="variable">
        <path element="reuse_free"/>
      </value>
    </argument>
    <argument id="AccountName">
      <value class="variable">
        <path element="AccountName"/>
      </value>
    </argument>
    <argument id="AccountEmail">
      <value class="variable">
        <path element="AccountEmail"/>
      </value>
    </argument>
    <argument id="GlobalCountryCode">
      <value class="variable">
        <path element="GlobalCountryCode"/>
      </value>
    </argument>
  </args>
  <tags/>
</testCase>
